name: Build and Publish Release

on:
  push:
  release:
    types: [published]

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Declare some variables
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Use Node.js 15
      uses: actions/setup-node@v2-beta
      with:
        node-version: '15'
        check-latest: true
    - run: yarn
      working-directory: frontend
    - run: REACT_APP_VERSION=${{ github.event.release.tag_name || format('{{{0}-{1}}}', steps.vars.outputs.branch, steps.vars.outputs.sha_short) }} yarn run build
      working-directory: frontend
    -
      name: Build and Publish Frontend ${{ github.event.release.tag_name || format('{{{0}-{1}}}', steps.vars.outputs.branch, steps.vars.outputs.sha_short) }}
      id: docker_build_frontend_tagged_version
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: leishi1313/aurora-admin-frontend:${{ github.event.release.tag_name || format('{{{0}-{1}}}', steps.vars.outputs.branch, steps.vars.outputs.sha_short) }}
    -
      if: github.event_name == 'release'
      name: Build and Publish Frontend Latest
      id: docker_build_frontend_latest
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: leishi1313/aurora-admin-frontend:latest
    -
      if: github.event_name != 'release'
      name: Build and Publish Frontend Test Latest
      id: docker_build_frontend_test_latest
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: leishi1313/aurora-admin-frontend:latest
    -
      name: Frontend digest
      run: echo ${{ steps.docker_build_frontend_tagged_version.outputs.digest }}
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Declare some variables
      id: vars
      shell: bash
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    -
      name: Build and Publish Backend ${{ github.event.release.tag_name || format('{{{0}-{1}}}', steps.vars.outputs.branch, steps.vars.outputs.sha_short) }}
      id: docker_build_backend_tagged_version
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: leishi1313/aurora-admin-backend:${{ github.event.release.tag_name || format('{{{0}-{1}}}', steps.vars.outputs.branch, steps.vars.outputs.sha_short) }}
    -
      if: github.event_name == 'release'
      name: Build and Publish Backend Latest
      id: docker_build_backend_latest
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: leishi1313/aurora-admin-backend:latest
    -
      if: github.event_name != 'release'
      name: Build and Publish Backend Test Latest
      id: docker_build_backend_test_latest
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: leishi1313/aurora-admin-backend:latest
    -
      name: Backend digest
      run: echo ${{ steps.docker_build_backend_tagged_version.outputs.digest }}
